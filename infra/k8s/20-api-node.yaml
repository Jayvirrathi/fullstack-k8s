apiVersion: v1
kind: Service
metadata:
  name: api-node
  namespace: ms-starter
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '80'
    prometheus.io/path: /metrics
spec:
  selector:
    app: api-node
  ports:
  - name: metrics
    port: 80
    targetPort: 4000
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-node
  namespace: ms-starter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-node
  template:
    metadata:
      labels:
        app: api-node
    spec:
      containers:
      - name: api-node
        image: api-node:dev
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4000
        env:
        - name: ITEMS_API_URL
          value: http://api-python:80
        - name: PRODUCTS_API_URL
          value: http://api-go:80
        - name: PORT
          value: '4000'
        - name: MONGO_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGO_DB
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MONGO_USER
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MONGO_PASSWORD
        - name: MONGO_URI
          value: mongodb://$(MONGO_USER):$(MONGO_PASSWORD)@mongo.ms-starter.svc.cluster.local:27017/?authSource=admin&directConnection=true
        readinessProbe:
          tcpSocket:
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 4000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 2
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-node
  namespace: ms-starter
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-node
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
